#################
# Linux specific
#
# If MINT_TARGET is defined, it is assumed to have a gcc 3.2 or newer
# compiler. Valid values are
#
# setenv MINT_TARGET pentium3
#
# setenv MINT_TARGET athlon-mp
#
# setenv MINT_TARGET itanium
#
# If you want to use the icc compiler (Intel). Use something like this
#
#export INTEL_LICENSE_FILE=/opt/intel/licenses/l_cpp_88267802.lic
#export PATH=${PATH}:/opt/intel/intel_cc_80/bin
#export LD_LIBRARY_PATH=/opt/intel/intel_cc_80/lib
#export ICC=1
#
#In GCC 4.0 or greater, there are errors generated in hash_map<> header
#file that are very annoying.  To avoid these, I've changed the warning
#flags for this case. Just export the following:
#export GCC4=1

DEFS	+=-DLINUX -DLENDIAN  -DSIMICS -DPOSIX_MEMALIGN
AABI	:=
ABI	:=
ABINAME :=Linux
##########################################################
ifdef ICC
##############
# icc Compiler
CXX	=icc
CC	=icc
LOPTS	:=-O2
COPTS	:=-O3
else
##############
# gcc Compiler
PDEFS	:=-W -Wall -Wno-unused
CXX	=g++ 
CC	=gcc

ifdef GCC4
PDEFS   += -Wno-return-type
endif 

LOPTS	:=-O2

ifdef PERFORMANCE
COPTS	:=-O2 -pg 
LOPTS   += -pg 
else
ifdef DEBUG
COPTS	:=-O0 -g -fno-inline-functions $(PDEFS)
else
# -fast does not work by default. Disable some opts
COPTS	:=-O3
endif # DEBUG
endif # PERFORMANCE

# Shared COPTS (do not affect debugging)
# Plaform Specific
COPTS	+=-momit-leaf-frame-pointer
ifdef MINT_TARGET
COPTS	+= -march=$(MINT_TARGET)
else
COPTS	+= -march=i686
endif 
# Platform neutral
COPTS +=-funroll-loops -fsched-interblock #-fomit-frame-pointer
COPTS +=-ffast-math -fno-exceptions -fno-strict-aliasing -freg-struct-return 
endif # icc Compiler 
##############################################################################

##############################################################################

ARFLAGS	:=cr
SHELL	=/bin/sh
AS	=as
LD	=ld
AR	=ar
M4	=m4
MAKE	=make
RANLIB	=ranlib
FIND	=find
SED	=sed
CONDORLD=condor_compile g++ -z muldefs
